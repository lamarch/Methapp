using System;
using System.Windows.Forms;

namespace Methanisation
{
    public class Exploitation
    {
        public string Nom { get; set; }

        public string Adresse { get; set; }

        public string Cle { get; set; }

        string ID;

        public string GETID { get => ID; }

        public string Exploitants { get; set; }

        public string ShortDesc { get => $"#{Cle} : \" {Nom} \""; }
        public string LongDesc { get => ShortDesc + $" à \" {Adresse} \" ({Exploitants})"; }


        public Exploitation()
        {
            this.ID = ID_Store.GetID_str(ID_Store.IDtype.EXPL);
            this.Nom = "<nom indéfini>";
            this.Adresse = "<adresse indéfinie>";
            this.Cle = "<ID_defaut_" + Util.GetRndID() + ">";
            this.Exploitants = "<exploitant(e)(s) indéfini(e)(s)>";
        }

        public Exploitation(string cle, string nom, string adresse, string exploitants)
        {
            this.ID = ID_Store.GetID_str(ID_Store.IDtype.EXPL);
            this.Cle = cle;
            this.Nom = nom;
            this.Adresse = adresse;
            this.Exploitants = exploitants;
        }

        public static Exploitation GetExploitationFromDGWRow(DataGridViewRow row, out bool err)
        {
            Exploitation exploitation = new Exploitation();

            DataGridViewCell cell = row.Cells[0];
            if(cell.Value != null)
            {
                exploitation.Nom = cell.Value.ToString();
            }

            cell = row.Cells[1];
            if (cell.Value != null)
            {
                exploitation.Cle = cell.Value.ToString();
            }

            cell = row.Cells[2];
            if (cell.Value != null)
            {
                exploitation.Adresse = cell.Value.ToString();
            }

            cell = row.Cells[3];
            if (cell.Value != null)
            {
                exploitation.Exploitants = cell.Value.ToString();
            }

            err = false;
            return exploitation;
        }

    }
}
